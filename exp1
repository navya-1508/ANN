import numpy as np
import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense
from tensorflow.keras.optimizers import Adam
x=np.array([[0,0,0],
       [0,0,1],
       [0,1,0],
       [1,0,0],
       [1,0,1],
       [1,1,0],
       [1,1,1]])
y=np.array([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [1]]
       )

# Define the model
model = Sequential([
    Dense(1, input_dim=2, activation='sigmoid')  # Set input_dim to 2
])

# Compile the model
model.compile(optimizer=Adam(learning_rate=0.1), loss='binary_crossentropy', metrics=['accuracy'])

# Train the model and save the history
history = model.fit(x, y, epochs=100, verbose=0)

# Print training accuracy for each epoch
for epoch, acc in enumerate(history.history['accuracy']):
    print(f"Epoch {epoch+1}: Training Accuracy: {acc:.4f}")

# Make predictions
for i in x:
    prediction = model.predict(np.array([i]))
    print(f"input: {i} - prediction: {int(round(prediction.flatten()[0]))}")
